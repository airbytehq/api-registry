openapi: 3.0.0
info:
  version: '2014-11-11'
  x-release: v4
  title: AWS Lambda
  description: <fullname>AWS Lambda</fullname> <p><b>Overview</b></p> <p>This is the
    AWS Lambda API Reference. The AWS Lambda Developer Guide provides additional information.
    For the service overview, go to <a href="http://docs.aws.amazon.com/lambda/latest/dg/welcome.html">What
    is AWS Lambda</a>, and for information about how the service works, go to <a href="http://docs.aws.amazon.com/lambda/latest/dg/lambda-introduction.html">AWS
    LambdaL How it Works</a> in the AWS Lambda Developer Guide.</p>
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: lambda
  x-origin:
  - contentType: application/json
    url: 
      https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/lambda-2014-11-11.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: false
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/lambda/
servers:
- url: http://lambda.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
  description: The AWS Lambda multi-region endpoint
- url: https://lambda.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
  description: The AWS Lambda multi-region endpoint
- url: http://lambda.{region}.amazonaws.com.cn
  variables:
    region:
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
      default: cn-north-1
  description: The AWS Lambda endpoint for China (Beijing) and China (Ningxia)
- url: https://lambda.{region}.amazonaws.com.cn
  variables:
    region:
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
      default: cn-north-1
  description: The AWS Lambda endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /2014-11-13/event-source-mappings/:
    post:
      operationId: AddEventSource
      description: '<p>Identifies a stream as an event source for an AWS Lambda function.
        It can be either an Amazon Kinesis stream or a Amazon DynamoDB stream. AWS
        Lambda invokes the specified function when records are posted to the stream.</p>
        <p>This is the pull model, where AWS Lambda invokes the function. For more
        information, go to <a href="http://docs.aws.amazon.com/lambda/latest/dg/lambda-introduction.html">AWS
        Lambda: How it Works</a> in the AWS Lambda Developer Guide.</p> <p>This association
        between an Amazon Kinesis stream and an AWS Lambda function is called the
        event source mapping. You provide the configuration information (for example,
        which stream to read from and which AWS Lambda function to invoke) for the
        event source mapping in the request body.</p> <p> Each event source, such
        as a Kinesis stream, can only be associated with one AWS Lambda function.
        If you call <a>AddEventSource</a> for an event source that is already mapped
        to another AWS Lambda function, the existing mapping is updated to call the
        new function instead of the old one. </p> <p>This operation requires permission
        for the <code>iam:PassRole</code> action for the IAM role. It also requires
        permission for the <code>lambda:AddEventSource</code> action.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  UUID:
                    allOf:
                    - type: string
                    - description: The AWS Lambda assigned opaque identifier for the
                        mapping.
                  BatchSize:
                    allOf:
                    - type: integer
                    - description: The largest number of records that AWS Lambda will
                        POST in the invocation request to your function.
                  EventSource:
                    allOf:
                    - type: string
                    - description: The Amazon Resource Name (ARN) of the Amazon Kinesis
                        stream that is the source of events.
                  FunctionName:
                    allOf:
                    - type: string
                      pattern: '[a-zA-Z0-9-_]+'
                      minLength: 1
                      maxLength: 64
                    - description: The Lambda function to invoke when AWS Lambda detects
                        an event on the stream.
                  Parameters:
                    allOf:
                    - type: object
                      additionalProperties:
                        type: string
                    - description: The map (key-value pairs) defining the configuration
                        for AWS Lambda to use when reading the event source.
                  Role:
                    allOf:
                    - type: string
                      pattern: arn:aws:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+
                    - description: The ARN of the IAM role (invocation role) that
                        AWS Lambda can assume to read from the stream and invoke the
                        function.
                  LastModified:
                    allOf:
                    - type: string
                      format: date-time
                    - description: The UTC time string indicating the last time the
                        event mapping was updated.
                  IsActive:
                    allOf:
                    - type: boolean
                    - description: Indicates whether the event source mapping is currently
                        honored. Events are only processes if IsActive is true.
                  Status:
                    allOf:
                    - type: string
                    - description: 'The description of the health of the event source
                        mapping. Valid values are: "PENDING", "OK", and "PROBLEM:<i>message</i>".
                        Initially this staus is "PENDING". When AWS Lambda begins
                        processing events, it changes the status to "OK".'
                description: Describes mapping between an Amazon Kinesis stream and
                  a Lambda function.
        '400':
          description: InvalidParameterValueException
          x-aws-exception: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  Type:
                    type: string
                  message:
                    type: string
                description: 'One of the parameters in the request is invalid. For
                  example, if you provided an IAM role for AWS Lambda to assume in
                  the <code>UploadFunction</code> or the <code>UpdateFunctionConfiguration</code>
                  API, that AWS Lambda is unable to assume you will get this exception. '
        '500':
          description: ServiceException
          x-aws-exception: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  Type:
                    type: string
                  Message:
                    type: string
                description: The AWS Lambda service encountered an internal error.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - EventSource
              - FunctionName
              - Role
              properties:
                EventSource:
                  description: The Amazon Resource Name (ARN) of the Amazon Kinesis
                    stream that is the event source. Any record added to this stream
                    causes AWS Lambda to invoke your Lambda function. AWS Lambda POSTs
                    the Amazon Kinesis event, containing records, to your Lambda function
                    as JSON.
                  type: string
                FunctionName:
                  description: The Lambda function to invoke when AWS Lambda detects
                    an event on the stream.
                  type: string
                  pattern: '[a-zA-Z0-9-_]+'
                  minLength: 1
                  maxLength: 64
                Role:
                  description: The ARN of the IAM role (invocation role) that AWS
                    Lambda can assume to read from the stream and invoke the function.
                  type: string
                  pattern: arn:aws:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+
                BatchSize:
                  description: The largest number of records that AWS Lambda will
                    give to your function in a single event. The default is 100 records.
                  type: integer
                Parameters:
                  description: 'A map (key-value pairs) defining the configuration
                    for AWS Lambda to use when reading the event source. Currently,
                    AWS Lambda supports only the <code>InitialPositionInStream</code>
                    key. The valid values are: "TRIM_HORIZON" and "LATEST". The default
                    value is "TRIM_HORIZON". For more information, go to <a href="http://docs.aws.amazon.com/kinesis/latest/APIReference/API_GetShardIterator.html#Kinesis-GetShardIterator-request-ShardIteratorType">ShardIteratorType</a>
                    in the Amazon Kinesis Service API Reference. '
                  type: object
                  additionalProperties:
                    type: string
    parameters:
    - name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    - name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    - name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    - name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    - name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    - name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    - name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
    get:
      operationId: ListEventSources
      description: <p>Returns a list of event source mappings you created using the
        <code>AddEventSource</code> (see <a>AddEventSource</a>), where you identify
        a stream as event source. This list does not include Amazon S3 event sources.
        </p> <p>For each mapping, the API returns configuration information. You can
        optionally specify filters to retrieve specific event source mappings.</p>
        <p>This operation requires permission for the <code>lambda:ListEventSources</code>
        action.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  NextMarker:
                    allOf:
                    - type: string
                    - description: A string, present if there are more event source
                        mappings.
                  EventSources:
                    allOf:
                    - type: array
                      items:
                        type: object
                        properties:
                          UUID:
                            allOf:
                            - type: string
                            - description: The AWS Lambda assigned opaque identifier
                                for the mapping.
                          BatchSize:
                            allOf:
                            - type: integer
                            - description: The largest number of records that AWS
                                Lambda will POST in the invocation request to your
                                function.
                          EventSource:
                            allOf:
                            - type: string
                            - description: The Amazon Resource Name (ARN) of the Amazon
                                Kinesis stream that is the source of events.
                          FunctionName:
                            allOf:
                            - type: string
                              pattern: '[a-zA-Z0-9-_]+'
                              minLength: 1
                              maxLength: 64
                            - description: The Lambda function to invoke when AWS
                                Lambda detects an event on the stream.
                          Parameters:
                            allOf:
                            - type: object
                              additionalProperties:
                                type: string
                            - description: The map (key-value pairs) defining the
                                configuration for AWS Lambda to use when reading the
                                event source.
                          Role:
                            allOf:
                            - type: string
                              pattern: arn:aws:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+
                            - description: The ARN of the IAM role (invocation role)
                                that AWS Lambda can assume to read from the stream
                                and invoke the function.
                          LastModified:
                            allOf:
                            - type: string
                              format: date-time
                            - description: The UTC time string indicating the last
                                time the event mapping was updated.
                          IsActive:
                            allOf:
                            - type: boolean
                            - description: Indicates whether the event source mapping
                                is currently honored. Events are only processes if
                                IsActive is true.
                          Status:
                            allOf:
                            - type: string
                            - description: 'The description of the health of the event
                                source mapping. Valid values are: "PENDING", "OK",
                                and "PROBLEM:<i>message</i>". Initially this staus
                                is "PENDING". When AWS Lambda begins processing events,
                                it changes the status to "OK".'
                        description: Describes mapping between an Amazon Kinesis stream
                          and a Lambda function.
                    - description: An arrary of <code>EventSourceConfiguration</code>
                        objects.
                description: Contains a list of event sources (see <a>API_EventSourceConfiguration</a>)
        '400':
          description: InvalidParameterValueException
          x-aws-exception: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  Type:
                    type: string
                  message:
                    type: string
                description: 'One of the parameters in the request is invalid. For
                  example, if you provided an IAM role for AWS Lambda to assume in
                  the <code>UploadFunction</code> or the <code>UpdateFunctionConfiguration</code>
                  API, that AWS Lambda is unable to assume you will get this exception. '
        '404':
          description: ResourceNotFoundException
          x-aws-exception: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  Type:
                    type: string
                  Message:
                    type: string
                description: The function or the event source specified in the request
                  does not exist.
        '500':
          description: ServiceException
          x-aws-exception: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  Type:
                    type: string
                  Message:
                    type: string
                description: The AWS Lambda service encountered an internal error.
      parameters:
      - name: EventSource
        in: query
        required: false
        description: The Amazon Resource Name (ARN) of the Amazon Kinesis stream.
        schema:
          type: string
      - name: FunctionName
        in: query
        required: false
        description: The name of the AWS Lambda function.
        schema:
          type: string
          pattern: '[a-zA-Z0-9-_]+'
          minLength: 1
          maxLength: 64
      - name: Marker
        in: query
        required: false
        description: 'Optional string. An opaque pagination token returned from a
          previous <code>ListEventSources</code> operation. If present, specifies
          to continue the list from where the returning call left off. '
        schema:
          type: string
      - name: MaxItems
        in: query
        required: false
        description: Optional integer. Specifies the maximum number of event sources
          to return in response. This value must be greater than 0.
        schema:
          type: integer
          minimum: 1
          maximum: 10000
  /2014-11-13/functions/{FunctionName}:
    delete:
      operationId: DeleteFunction
      description: <p>Deletes the specified Lambda function code and configuration.</p>
        <p>This operation requires permission for the <code>lambda:DeleteFunction</code>
        action.</p>
      responses:
        '204':
          description: Success
        '404':
          description: ResourceNotFoundException
          x-aws-exception: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  Type:
                    type: string
                  Message:
                    type: string
                description: The function or the event source specified in the request
                  does not exist.
        '500':
          description: ServiceException
          x-aws-exception: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  Type:
                    type: string
                  Message:
                    type: string
                description: The AWS Lambda service encountered an internal error.
      parameters:
      - name: FunctionName
        in: path
        required: true
        description: The Lambda function to delete.
        schema:
          type: string
          pattern: '[a-zA-Z0-9-_]+'
          minLength: 1
          maxLength: 64
    parameters:
    - name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    - name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    - name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    - name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    - name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    - name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    - name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
    get:
      operationId: GetFunction
      description: <p>Returns the configuration information of the Lambda function
        and a presigned URL link to the .zip file you uploaded with <a>UploadFunction</a>
        so you can download the .zip file. Note that the URL is valid for up to 10
        minutes. The configuration information is the same information you provided
        as parameters when uploading the function.</p> <p>This operation requires
        permission for the <code>lambda:GetFunction</code> action.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  Configuration:
                    type: object
                    properties:
                      FunctionName:
                        allOf:
                        - type: string
                          pattern: '[a-zA-Z0-9-_]+'
                          minLength: 1
                          maxLength: 64
                        - description: The name of the function.
                      FunctionARN:
                        allOf:
                        - type: string
                          pattern: 
                            arn:aws:lambda:[a-z]{2}-[a-z]+-\d{1}:\d{12}:function:[a-zA-Z0-9-_]+(\/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})?
                        - description: The Amazon Resource Name (ARN) assigned to
                            the function.
                      ConfigurationId:
                        allOf:
                        - type: string
                        - description: A Lambda-assigned unique identifier for the
                            current function code and related configuration.
                      Runtime:
                        allOf:
                        - type: string
                          enum:
                          - nodejs
                        - description: The runtime environment for the Lambda function.
                      Role:
                        allOf:
                        - type: string
                          pattern: arn:aws:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+
                        - description: The Amazon Resource Name (ARN) of the IAM role
                            that Lambda assumes when it executes your function to
                            access any other Amazon Web Services (AWS) resources.
                      Handler:
                        allOf:
                        - type: string
                          pattern: '[a-zA-Z0-9./\-_]+'
                        - description: The function Lambda calls to begin executing
                            your function.
                      Mode:
                        allOf:
                        - type: string
                          enum:
                          - event
                        - description: 'The type of the Lambda function you uploaded. '
                      CodeSize:
                        allOf:
                        - type: integer
                        - description: The size, in bytes, of the function .zip file
                            you uploaded.
                      Description:
                        allOf:
                        - type: string
                          minLength: 0
                          maxLength: 256
                        - description: The user-provided description.
                      Timeout:
                        allOf:
                        - type: integer
                          minimum: 1
                          maximum: 60
                        - description: 'The function execution time at which Lambda
                            should terminate the function. Because the execution time
                            has cost implications, we recommend you set this value
                            based on your expected execution time. The default is
                            3 seconds. '
                      MemorySize:
                        allOf:
                        - type: integer
                          minimum: 128
                          maximum: 1024
                        - description: The memory size, in MB, you configured for
                            the function. Must be a multiple of 64 MB.
                      LastModified:
                        allOf:
                        - type: string
                          format: date-time
                        - description: The timestamp of the last time you updated
                            the function.
                    description: A complex type that describes function metadata.
                  Code:
                    type: object
                    properties:
                      RepositoryType:
                        allOf:
                        - type: string
                        - description: The repository from which you can download
                            the function.
                      Location:
                        allOf:
                        - type: string
                        - description: The presigned URL you can use to download the
                            function's .zip file that you previously uploaded. The
                            URL is valid for up to 10 minutes.
                    description: The object for the Lambda function location.
                description: This response contains the object for AWS Lambda function
                  location (see <a>API_FunctionCodeLocation</a>
        '404':
          description: ResourceNotFoundException
          x-aws-exception: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  Type:
                    type: string
                  Message:
                    type: string
                description: The function or the event source specified in the request
                  does not exist.
        '500':
          description: ServiceException
          x-aws-exception: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  Type:
                    type: string
                  Message:
                    type: string
                description: The AWS Lambda service encountered an internal error.
      parameters:
      - name: FunctionName
        in: path
        required: true
        description: The Lambda function name.
        schema:
          type: string
          pattern: '[a-zA-Z0-9-_]+'
          minLength: 1
          maxLength: 64
  /2014-11-13/event-source-mappings/{UUID}:
    get:
      operationId: GetEventSource
      description: <p>Returns configuration information for the specified event source
        mapping (see <a>AddEventSource</a>).</p> <p>This operation requires permission
        for the <code>lambda:GetEventSource</code> action.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  UUID:
                    allOf:
                    - type: string
                    - description: The AWS Lambda assigned opaque identifier for the
                        mapping.
                  BatchSize:
                    allOf:
                    - type: integer
                    - description: The largest number of records that AWS Lambda will
                        POST in the invocation request to your function.
                  EventSource:
                    allOf:
                    - type: string
                    - description: The Amazon Resource Name (ARN) of the Amazon Kinesis
                        stream that is the source of events.
                  FunctionName:
                    allOf:
                    - type: string
                      pattern: '[a-zA-Z0-9-_]+'
                      minLength: 1
                      maxLength: 64
                    - description: The Lambda function to invoke when AWS Lambda detects
                        an event on the stream.
                  Parameters:
                    allOf:
                    - type: object
                      additionalProperties:
                        type: string
                    - description: The map (key-value pairs) defining the configuration
                        for AWS Lambda to use when reading the event source.
                  Role:
                    allOf:
                    - type: string
                      pattern: arn:aws:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+
                    - description: The ARN of the IAM role (invocation role) that
                        AWS Lambda can assume to read from the stream and invoke the
                        function.
                  LastModified:
                    allOf:
                    - type: string
                      format: date-time
                    - description: The UTC time string indicating the last time the
                        event mapping was updated.
                  IsActive:
                    allOf:
                    - type: boolean
                    - description: Indicates whether the event source mapping is currently
                        honored. Events are only processes if IsActive is true.
                  Status:
                    allOf:
                    - type: string
                    - description: 'The description of the health of the event source
                        mapping. Valid values are: "PENDING", "OK", and "PROBLEM:<i>message</i>".
                        Initially this staus is "PENDING". When AWS Lambda begins
                        processing events, it changes the status to "OK".'
                description: Describes mapping between an Amazon Kinesis stream and
                  a Lambda function.
        '400':
          description: InvalidParameterValueException
          x-aws-exception: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  Type:
                    type: string
                  message:
                    type: string
                description: 'One of the parameters in the request is invalid. For
                  example, if you provided an IAM role for AWS Lambda to assume in
                  the <code>UploadFunction</code> or the <code>UpdateFunctionConfiguration</code>
                  API, that AWS Lambda is unable to assume you will get this exception. '
        '404':
          description: ResourceNotFoundException
          x-aws-exception: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  Type:
                    type: string
                  Message:
                    type: string
                description: The function or the event source specified in the request
                  does not exist.
        '500':
          description: ServiceException
          x-aws-exception: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  Type:
                    type: string
                  Message:
                    type: string
                description: The AWS Lambda service encountered an internal error.
      parameters:
      - name: UUID
        in: path
        required: true
        description: The AWS Lambda assigned ID of the event source mapping.
        schema:
          type: string
    parameters:
    - name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    - name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    - name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    - name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    - name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    - name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    - name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
    delete:
      operationId: RemoveEventSource
      description: <p>Removes an event source mapping. This means AWS Lambda will
        no longer invoke the function for events in the associated source.</p> <p>This
        operation requires permission for the <code>lambda:RemoveEventSource</code>
        action.</p>
      responses:
        '204':
          description: Success
        '400':
          description: InvalidParameterValueException
          x-aws-exception: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  Type:
                    type: string
                  message:
                    type: string
                description: 'One of the parameters in the request is invalid. For
                  example, if you provided an IAM role for AWS Lambda to assume in
                  the <code>UploadFunction</code> or the <code>UpdateFunctionConfiguration</code>
                  API, that AWS Lambda is unable to assume you will get this exception. '
        '404':
          description: ResourceNotFoundException
          x-aws-exception: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  Type:
                    type: string
                  Message:
                    type: string
                description: The function or the event source specified in the request
                  does not exist.
        '500':
          description: ServiceException
          x-aws-exception: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  Type:
                    type: string
                  Message:
                    type: string
                description: The AWS Lambda service encountered an internal error.
      parameters:
      - name: UUID
        in: path
        required: true
        description: The event source mapping ID.
        schema:
          type: string
  /2014-11-13/functions/{FunctionName}/configuration:
    get:
      operationId: GetFunctionConfiguration
      description: <p>Returns the configuration information of the Lambda function.
        This the same information you provided as parameters when uploading the function
        by using <a>UploadFunction</a>.</p> <p>This operation requires permission
        for the <code>lambda:GetFunctionConfiguration</code> operation.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  FunctionName:
                    allOf:
                    - type: string
                      pattern: '[a-zA-Z0-9-_]+'
                      minLength: 1
                      maxLength: 64
                    - description: The name of the function.
                  FunctionARN:
                    allOf:
                    - type: string
                      pattern: 
                        arn:aws:lambda:[a-z]{2}-[a-z]+-\d{1}:\d{12}:function:[a-zA-Z0-9-_]+(\/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})?
                    - description: The Amazon Resource Name (ARN) assigned to the
                        function.
                  ConfigurationId:
                    allOf:
                    - type: string
                    - description: A Lambda-assigned unique identifier for the current
                        function code and related configuration.
                  Runtime:
                    allOf:
                    - type: string
                      enum:
                      - nodejs
                    - description: The runtime environment for the Lambda function.
                  Role:
                    allOf:
                    - type: string
                      pattern: arn:aws:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+
                    - description: The Amazon Resource Name (ARN) of the IAM role
                        that Lambda assumes when it executes your function to access
                        any other Amazon Web Services (AWS) resources.
                  Handler:
                    allOf:
                    - type: string
                      pattern: '[a-zA-Z0-9./\-_]+'
                    - description: The function Lambda calls to begin executing your
                        function.
                  Mode:
                    allOf:
                    - type: string
                      enum:
                      - event
                    - description: 'The type of the Lambda function you uploaded. '
                  CodeSize:
                    allOf:
                    - type: integer
                    - description: The size, in bytes, of the function .zip file you
                        uploaded.
                  Description:
                    allOf:
                    - type: string
                      minLength: 0
                      maxLength: 256
                    - description: The user-provided description.
                  Timeout:
                    allOf:
                    - type: integer
                      minimum: 1
                      maximum: 60
                    - description: 'The function execution time at which Lambda should
                        terminate the function. Because the execution time has cost
                        implications, we recommend you set this value based on your
                        expected execution time. The default is 3 seconds. '
                  MemorySize:
                    allOf:
                    - type: integer
                      minimum: 128
                      maximum: 1024
                    - description: The memory size, in MB, you configured for the
                        function. Must be a multiple of 64 MB.
                  LastModified:
                    allOf:
                    - type: string
                      format: date-time
                    - description: The timestamp of the last time you updated the
                        function.
                description: A complex type that describes function metadata.
        '404':
          description: ResourceNotFoundException
          x-aws-exception: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  Type:
                    type: string
                  Message:
                    type: string
                description: The function or the event source specified in the request
                  does not exist.
        '500':
          description: ServiceException
          x-aws-exception: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  Type:
                    type: string
                  Message:
                    type: string
                description: The AWS Lambda service encountered an internal error.
      parameters:
      - name: FunctionName
        in: path
        required: true
        description: The name of the Lambda function for which you want to retrieve
          the configuration information.
        schema:
          type: string
          pattern: '[a-zA-Z0-9-_]+'
          minLength: 1
          maxLength: 64
    parameters:
    - name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    - name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    - name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    - name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    - name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    - name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    - name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
    put:
      operationId: UpdateFunctionConfiguration
      description: <p>Updates the configuration parameters for the specified Lambda
        function by using the values provided in the request. You provide only the
        parameters you want to change. This operation must only be used on an existing
        Lambda function and cannot be used to update the function's code. </p> <p>This
        operation requires permission for the <code>lambda:UpdateFunctionConfiguration</code>
        action.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  FunctionName:
                    allOf:
                    - type: string
                      pattern: '[a-zA-Z0-9-_]+'
                      minLength: 1
                      maxLength: 64
                    - description: The name of the function.
                  FunctionARN:
                    allOf:
                    - type: string
                      pattern: 
                        arn:aws:lambda:[a-z]{2}-[a-z]+-\d{1}:\d{12}:function:[a-zA-Z0-9-_]+(\/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})?
                    - description: The Amazon Resource Name (ARN) assigned to the
                        function.
                  ConfigurationId:
                    allOf:
                    - type: string
                    - description: A Lambda-assigned unique identifier for the current
                        function code and related configuration.
                  Runtime:
                    allOf:
                    - type: string
                      enum:
                      - nodejs
                    - description: The runtime environment for the Lambda function.
                  Role:
                    allOf:
                    - type: string
                      pattern: arn:aws:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+
                    - description: The Amazon Resource Name (ARN) of the IAM role
                        that Lambda assumes when it executes your function to access
                        any other Amazon Web Services (AWS) resources.
                  Handler:
                    allOf:
                    - type: string
                      pattern: '[a-zA-Z0-9./\-_]+'
                    - description: The function Lambda calls to begin executing your
                        function.
                  Mode:
                    allOf:
                    - type: string
                      enum:
                      - event
                    - description: 'The type of the Lambda function you uploaded. '
                  CodeSize:
                    allOf:
                    - type: integer
                    - description: The size, in bytes, of the function .zip file you
                        uploaded.
                  Description:
                    allOf:
                    - type: string
                      minLength: 0
                      maxLength: 256
                    - description: The user-provided description.
                  Timeout:
                    allOf:
                    - type: integer
                      minimum: 1
                      maximum: 60
                    - description: 'The function execution time at which Lambda should
                        terminate the function. Because the execution time has cost
                        implications, we recommend you set this value based on your
                        expected execution time. The default is 3 seconds. '
                  MemorySize:
                    allOf:
                    - type: integer
                      minimum: 128
                      maximum: 1024
                    - description: The memory size, in MB, you configured for the
                        function. Must be a multiple of 64 MB.
                  LastModified:
                    allOf:
                    - type: string
                      format: date-time
                    - description: The timestamp of the last time you updated the
                        function.
                description: A complex type that describes function metadata.
        '400':
          description: InvalidParameterValueException
          x-aws-exception: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  Type:
                    type: string
                  message:
                    type: string
                description: 'One of the parameters in the request is invalid. For
                  example, if you provided an IAM role for AWS Lambda to assume in
                  the <code>UploadFunction</code> or the <code>UpdateFunctionConfiguration</code>
                  API, that AWS Lambda is unable to assume you will get this exception. '
        '404':
          description: ResourceNotFoundException
          x-aws-exception: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  Type:
                    type: string
                  Message:
                    type: string
                description: The function or the event source specified in the request
                  does not exist.
        '500':
          description: ServiceException
          x-aws-exception: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  Type:
                    type: string
                  Message:
                    type: string
                description: The AWS Lambda service encountered an internal error.
      parameters:
      - name: FunctionName
        in: path
        required: true
        description: The name of the Lambda function.
        schema:
          type: string
          pattern: '[a-zA-Z0-9-_]+'
          minLength: 1
          maxLength: 64
      - name: Role
        in: query
        required: false
        description: 'The Amazon Resource Name (ARN) of the IAM role that Lambda will
          assume when it executes your function. '
        schema:
          type: string
          pattern: arn:aws:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+
      - name: Handler
        in: query
        required: false
        description: 'The function that Lambda calls to begin executing your function.
          For Node.js, it is the <i>module-name.export</i> value in your function. '
        schema:
          type: string
          pattern: '[a-zA-Z0-9./\-_]+'
      - name: Description
        in: query
        required: false
        description: A short user-defined function description. Lambda does not use
          this value. Assign a meaningful description as you see fit.
        schema:
          type: string
          minLength: 0
          maxLength: 256
      - name: Timeout
        in: query
        required: false
        description: 'The function execution time at which Lambda should terminate
          the function. Because the execution time has cost implications, we recommend
          you set this value based on your expected execution time. The default is
          3 seconds. '
        schema:
          type: integer
          minimum: 1
          maximum: 60
      - name: MemorySize
        in: query
        required: false
        description: The amount of memory, in MB, your Lambda function is given. Lambda
          uses this memory size to infer the amount of CPU allocated to your function.
          Your function use-case determines your CPU and memory requirements. For
          example, a database operation might need less memory compared to an image
          processing function. The default value is 128 MB. The value must be a multiple
          of 64 MB.
        schema:
          type: integer
          minimum: 128
          maximum: 1024
  /2014-11-13/functions/{FunctionName}/invoke-async/:
    post:
      operationId: InvokeAsync
      description: <p>Submits an invocation request to AWS Lambda. Upon receiving
        the request, Lambda executes the specified function asynchronously. To see
        the logs generated by the Lambda function execution, see the CloudWatch logs
        console.</p> <p>This operation requires permission for the <code>lambda:InvokeAsync</code>
        action.</p>
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status:
                    allOf:
                    - type: integer
                    - description: It will be 202 upon success.
                description: Upon success, it returns empty response. Otherwise, throws
                  an exception.
        '400':
          description: InvalidRequestContentException
          x-aws-exception: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  Type:
                    type: string
                  message:
                    type: string
                description: The request body could not be parsed as JSON.
        '404':
          description: ResourceNotFoundException
          x-aws-exception: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  Type:
                    type: string
                  Message:
                    type: string
                description: The function or the event source specified in the request
                  does not exist.
        '500':
          description: ServiceException
          x-aws-exception: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  Type:
                    type: string
                  Message:
                    type: string
                description: The AWS Lambda service encountered an internal error.
      parameters:
      - name: FunctionName
        in: path
        required: true
        description: The Lambda function name.
        schema:
          type: string
          pattern: '[a-zA-Z0-9-_]+'
          minLength: 1
          maxLength: 64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - InvokeArgs
              properties:
                InvokeArgs:
                  description: JSON that you want to provide to your Lambda function
                    as input.
                  type: string
    parameters:
    - name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    - name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    - name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    - name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    - name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    - name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    - name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  /2014-11-13/functions/:
    get:
      operationId: ListFunctions
      description: <p>Returns a list of your Lambda functions. For each function,
        the response includes the function configuration information. You must use
        <a>GetFunction</a> to retrieve the code for your function.</p> <p>This operation
        requires permission for the <code>lambda:ListFunctions</code> action.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  NextMarker:
                    allOf:
                    - type: string
                    - description: A string, present if there are more functions.
                  Functions:
                    allOf:
                    - type: array
                      items:
                        type: object
                        properties:
                          FunctionName:
                            allOf:
                            - type: string
                              pattern: '[a-zA-Z0-9-_]+'
                              minLength: 1
                              maxLength: 64
                            - description: The name of the function.
                          FunctionARN:
                            allOf:
                            - type: string
                              pattern: 
                                arn:aws:lambda:[a-z]{2}-[a-z]+-\d{1}:\d{12}:function:[a-zA-Z0-9-_]+(\/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})?
                            - description: The Amazon Resource Name (ARN) assigned
                                to the function.
                          ConfigurationId:
                            allOf:
                            - type: string
                            - description: A Lambda-assigned unique identifier for
                                the current function code and related configuration.
                          Runtime:
                            allOf:
                            - type: string
                              enum:
                              - nodejs
                            - description: The runtime environment for the Lambda
                                function.
                          Role:
                            allOf:
                            - type: string
                              pattern: arn:aws:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+
                            - description: The Amazon Resource Name (ARN) of the IAM
                                role that Lambda assumes when it executes your function
                                to access any other Amazon Web Services (AWS) resources.
                          Handler:
                            allOf:
                            - type: string
                              pattern: '[a-zA-Z0-9./\-_]+'
                            - description: The function Lambda calls to begin executing
                                your function.
                          Mode:
                            allOf:
                            - type: string
                              enum:
                              - event
                            - description: 'The type of the Lambda function you uploaded. '
                          CodeSize:
                            allOf:
                            - type: integer
                            - description: The size, in bytes, of the function .zip
                                file you uploaded.
                          Description:
                            allOf:
                            - type: string
                              minLength: 0
                              maxLength: 256
                            - description: The user-provided description.
                          Timeout:
                            allOf:
                            - type: integer
                              minimum: 1
                              maximum: 60
                            - description: 'The function execution time at which Lambda
                                should terminate the function. Because the execution
                                time has cost implications, we recommend you set this
                                value based on your expected execution time. The default
                                is 3 seconds. '
                          MemorySize:
                            allOf:
                            - type: integer
                              minimum: 128
                              maximum: 1024
                            - description: The memory size, in MB, you configured
                                for the function. Must be a multiple of 64 MB.
                          LastModified:
                            allOf:
                            - type: string
                              format: date-time
                            - description: The timestamp of the last time you updated
                                the function.
                        description: A complex type that describes function metadata.
                    - description: A list of Lambda functions.
                description: Contains a list of AWS Lambda function configurations
                  (see <a>API_FunctionConfiguration</a>.
        '500':
          description: ServiceException
          x-aws-exception: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  Type:
                    type: string
                  Message:
                    type: string
                description: The AWS Lambda service encountered an internal error.
      parameters:
      - name: Marker
        in: query
        required: false
        description: 'Optional string. An opaque pagination token returned from a
          previous <code>ListFunctions</code> operation. If present, indicates where
          to continue the listing. '
        schema:
          type: string
      - name: MaxItems
        in: query
        required: false
        description: Optional integer. Specifies the maximum number of AWS Lambda
          functions to return in response. This parameter value must be greater than
          0.
        schema:
          type: integer
          minimum: 1
          maximum: 10000
    parameters:
    - name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    - name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    - name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    - name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    - name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    - name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    - name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  /2014-11-13/functions/{FunctionName}#Runtime&Role&Handler&Mode:
    put:
      operationId: UploadFunction
      description: <p>Creates a new Lambda function or updates an existing function.
        The function metadata is created from the request parameters, and the code
        for the function is provided by a .zip file in the request body. If the function
        name already exists, the existing Lambda function is updated with the new
        code and metadata. </p> <p>This operation requires permission for the <code>lambda:UploadFunction</code>
        action.</p>
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  FunctionName:
                    allOf:
                    - type: string
                      pattern: '[a-zA-Z0-9-_]+'
                      minLength: 1
                      maxLength: 64
                    - description: The name of the function.
                  FunctionARN:
                    allOf:
                    - type: string
                      pattern: 
                        arn:aws:lambda:[a-z]{2}-[a-z]+-\d{1}:\d{12}:function:[a-zA-Z0-9-_]+(\/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})?
                    - description: The Amazon Resource Name (ARN) assigned to the
                        function.
                  ConfigurationId:
                    allOf:
                    - type: string
                    - description: A Lambda-assigned unique identifier for the current
                        function code and related configuration.
                  Runtime:
                    allOf:
                    - type: string
                      enum:
                      - nodejs
                    - description: The runtime environment for the Lambda function.
                  Role:
                    allOf:
                    - type: string
                      pattern: arn:aws:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+
                    - description: The Amazon Resource Name (ARN) of the IAM role
                        that Lambda assumes when it executes your function to access
                        any other Amazon Web Services (AWS) resources.
                  Handler:
                    allOf:
                    - type: string
                      pattern: '[a-zA-Z0-9./\-_]+'
                    - description: The function Lambda calls to begin executing your
                        function.
                  Mode:
                    allOf:
                    - type: string
                      enum:
                      - event
                    - description: 'The type of the Lambda function you uploaded. '
                  CodeSize:
                    allOf:
                    - type: integer
                    - description: The size, in bytes, of the function .zip file you
                        uploaded.
                  Description:
                    allOf:
                    - type: string
                      minLength: 0
                      maxLength: 256
                    - description: The user-provided description.
                  Timeout:
                    allOf:
                    - type: integer
                      minimum: 1
                      maximum: 60
                    - description: 'The function execution time at which Lambda should
                        terminate the function. Because the execution time has cost
                        implications, we recommend you set this value based on your
                        expected execution time. The default is 3 seconds. '
                  MemorySize:
                    allOf:
                    - type: integer
                      minimum: 128
                      maximum: 1024
                    - description: The memory size, in MB, you configured for the
                        function. Must be a multiple of 64 MB.
                  LastModified:
                    allOf:
                    - type: string
                      format: date-time
                    - description: The timestamp of the last time you updated the
                        function.
                description: A complex type that describes function metadata.
        '400':
          description: InvalidParameterValueException
          x-aws-exception: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  Type:
                    type: string
                  message:
                    type: string
                description: 'One of the parameters in the request is invalid. For
                  example, if you provided an IAM role for AWS Lambda to assume in
                  the <code>UploadFunction</code> or the <code>UpdateFunctionConfiguration</code>
                  API, that AWS Lambda is unable to assume you will get this exception. '
        '404':
          description: ResourceNotFoundException
          x-aws-exception: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  Type:
                    type: string
                  Message:
                    type: string
                description: The function or the event source specified in the request
                  does not exist.
        '500':
          description: ServiceException
          x-aws-exception: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  Type:
                    type: string
                  Message:
                    type: string
                description: The AWS Lambda service encountered an internal error.
      parameters:
      - name: FunctionName
        in: path
        required: true
        description: 'The name you want to assign to the function you are uploading.
          The function names appear in the console and are returned in the <a>ListFunctions</a>
          API. Function names are used to specify functions to other AWS Lambda APIs,
          such as <a>InvokeAsync</a>. '
        schema:
          type: string
          pattern: '[a-zA-Z0-9-_]+'
          minLength: 1
          maxLength: 64
      - name: Runtime
        in: query
        required: true
        description: The runtime environment for the Lambda function you are uploading.
          Currently, Lambda supports only "nodejs" as the runtime.
        schema:
          type: string
          enum:
          - nodejs
      - name: Role
        in: query
        required: true
        description: 'The Amazon Resource Name (ARN) of the IAM role that Lambda assumes
          when it executes your function to access any other Amazon Web Services (AWS)
          resources. '
        schema:
          type: string
          pattern: arn:aws:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+
      - name: Handler
        in: query
        required: true
        description: 'The function that Lambda calls to begin execution. For Node.js,
          it is the <i>module-name</i>.<i>export</i> value in your function. '
        schema:
          type: string
          pattern: '[a-zA-Z0-9./\-_]+'
      - name: Mode
        in: query
        required: true
        description: 'How the Lambda function will be invoked. Lambda supports only
          the "event" mode. '
        schema:
          type: string
          enum:
          - event
      - name: Description
        in: query
        required: false
        description: A short, user-defined function description. Lambda does not use
          this value. Assign a meaningful description as you see fit.
        schema:
          type: string
          minLength: 0
          maxLength: 256
      - name: Timeout
        in: query
        required: false
        description: 'The function execution time at which Lambda should terminate
          the function. Because the execution time has cost implications, we recommend
          you set this value based on your expected execution time. The default is
          3 seconds. '
        schema:
          type: integer
          minimum: 1
          maximum: 60
      - name: MemorySize
        in: query
        required: false
        description: The amount of memory, in MB, your Lambda function is given. Lambda
          uses this memory size to infer the amount of CPU allocated to your function.
          Your function use-case determines your CPU and memory requirements. For
          example, database operation might need less memory compared to image processing
          function. The default value is 128 MB. The value must be a multiple of 64
          MB.
        schema:
          type: integer
          minimum: 128
          maximum: 1024
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - FunctionZip
              properties:
                FunctionZip:
                  description: 'A .zip file containing your packaged source code.
                    For more information about creating a .zip file, go to <a href="http://docs.aws.amazon.com/lambda/latest/dg/walkthrough-custom-events.html">AWS
                    LambdaL How it Works</a> in the AWS Lambda Developer Guide. '
                  type: string
    parameters:
    - name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    - name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    - name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    - name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    - name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    - name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    - name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    EventSourceConfiguration:
      type: object
      properties:
        UUID:
          allOf:
          - type: string
          - description: The AWS Lambda assigned opaque identifier for the mapping.
        BatchSize:
          allOf:
          - type: integer
          - description: The largest number of records that AWS Lambda will POST in
              the invocation request to your function.
        EventSource:
          allOf:
          - type: string
          - description: The Amazon Resource Name (ARN) of the Amazon Kinesis stream
              that is the source of events.
        FunctionName:
          allOf:
          - type: string
            pattern: '[a-zA-Z0-9-_]+'
            minLength: 1
            maxLength: 64
          - description: The Lambda function to invoke when AWS Lambda detects an
              event on the stream.
        Parameters:
          allOf:
          - type: object
            additionalProperties:
              type: string
          - description: The map (key-value pairs) defining the configuration for
              AWS Lambda to use when reading the event source.
        Role:
          allOf:
          - type: string
            pattern: arn:aws:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+
          - description: The ARN of the IAM role (invocation role) that AWS Lambda
              can assume to read from the stream and invoke the function.
        LastModified:
          allOf:
          - type: string
            format: date-time
          - description: The UTC time string indicating the last time the event mapping
              was updated.
        IsActive:
          allOf:
          - type: boolean
          - description: Indicates whether the event source mapping is currently honored.
              Events are only processes if IsActive is true.
        Status:
          allOf:
          - type: string
          - description: 'The description of the health of the event source mapping.
              Valid values are: "PENDING", "OK", and "PROBLEM:<i>message</i>". Initially
              this staus is "PENDING". When AWS Lambda begins processing events, it
              changes the status to "OK".'
      description: Describes mapping between an Amazon Kinesis stream and a Lambda
        function.
    String:
      type: string
    ServiceException:
      type: object
      properties:
        Type:
          type: string
        Message:
          type: string
      description: The AWS Lambda service encountered an internal error.
    InvalidParameterValueException:
      type: object
      properties:
        Type:
          type: string
        message:
          type: string
      description: 'One of the parameters in the request is invalid. For example,
        if you provided an IAM role for AWS Lambda to assume in the <code>UploadFunction</code>
        or the <code>UpdateFunctionConfiguration</code> API, that AWS Lambda is unable
        to assume you will get this exception. '
    ResourceNotFoundException:
      type: object
      properties:
        Type:
          type: string
        Message:
          type: string
      description: The function or the event source specified in the request does
        not exist.
    GetFunctionResponse:
      type: object
      properties:
        Configuration:
          type: object
          properties:
            FunctionName:
              allOf:
              - type: string
                pattern: '[a-zA-Z0-9-_]+'
                minLength: 1
                maxLength: 64
              - description: The name of the function.
            FunctionARN:
              allOf:
              - type: string
                pattern: 
                  arn:aws:lambda:[a-z]{2}-[a-z]+-\d{1}:\d{12}:function:[a-zA-Z0-9-_]+(\/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})?
              - description: The Amazon Resource Name (ARN) assigned to the function.
            ConfigurationId:
              allOf:
              - type: string
              - description: A Lambda-assigned unique identifier for the current function
                  code and related configuration.
            Runtime:
              allOf:
              - type: string
                enum:
                - nodejs
              - description: The runtime environment for the Lambda function.
            Role:
              allOf:
              - type: string
                pattern: arn:aws:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+
              - description: The Amazon Resource Name (ARN) of the IAM role that Lambda
                  assumes when it executes your function to access any other Amazon
                  Web Services (AWS) resources.
            Handler:
              allOf:
              - type: string
                pattern: '[a-zA-Z0-9./\-_]+'
              - description: The function Lambda calls to begin executing your function.
            Mode:
              allOf:
              - type: string
                enum:
                - event
              - description: 'The type of the Lambda function you uploaded. '
            CodeSize:
              allOf:
              - type: integer
              - description: The size, in bytes, of the function .zip file you uploaded.
            Description:
              allOf:
              - type: string
                minLength: 0
                maxLength: 256
              - description: The user-provided description.
            Timeout:
              allOf:
              - type: integer
                minimum: 1
                maximum: 60
              - description: 'The function execution time at which Lambda should terminate
                  the function. Because the execution time has cost implications,
                  we recommend you set this value based on your expected execution
                  time. The default is 3 seconds. '
            MemorySize:
              allOf:
              - type: integer
                minimum: 128
                maximum: 1024
              - description: The memory size, in MB, you configured for the function.
                  Must be a multiple of 64 MB.
            LastModified:
              allOf:
              - type: string
                format: date-time
              - description: The timestamp of the last time you updated the function.
          description: A complex type that describes function metadata.
        Code:
          type: object
          properties:
            RepositoryType:
              allOf:
              - type: string
              - description: The repository from which you can download the function.
            Location:
              allOf:
              - type: string
              - description: The presigned URL you can use to download the function's
                  .zip file that you previously uploaded. The URL is valid for up
                  to 10 minutes.
          description: The object for the Lambda function location.
      description: This response contains the object for AWS Lambda function location
        (see <a>API_FunctionCodeLocation</a>
    FunctionConfiguration:
      type: object
      properties:
        FunctionName:
          allOf:
          - type: string
            pattern: '[a-zA-Z0-9-_]+'
            minLength: 1
            maxLength: 64
          - description: The name of the function.
        FunctionARN:
          allOf:
          - type: string
            pattern: 
              arn:aws:lambda:[a-z]{2}-[a-z]+-\d{1}:\d{12}:function:[a-zA-Z0-9-_]+(\/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})?
          - description: The Amazon Resource Name (ARN) assigned to the function.
        ConfigurationId:
          allOf:
          - type: string
          - description: A Lambda-assigned unique identifier for the current function
              code and related configuration.
        Runtime:
          allOf:
          - type: string
            enum:
            - nodejs
          - description: The runtime environment for the Lambda function.
        Role:
          allOf:
          - type: string
            pattern: arn:aws:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+
          - description: The Amazon Resource Name (ARN) of the IAM role that Lambda
              assumes when it executes your function to access any other Amazon Web
              Services (AWS) resources.
        Handler:
          allOf:
          - type: string
            pattern: '[a-zA-Z0-9./\-_]+'
          - description: The function Lambda calls to begin executing your function.
        Mode:
          allOf:
          - type: string
            enum:
            - event
          - description: 'The type of the Lambda function you uploaded. '
        CodeSize:
          allOf:
          - type: integer
          - description: The size, in bytes, of the function .zip file you uploaded.
        Description:
          allOf:
          - type: string
            minLength: 0
            maxLength: 256
          - description: The user-provided description.
        Timeout:
          allOf:
          - type: integer
            minimum: 1
            maximum: 60
          - description: 'The function execution time at which Lambda should terminate
              the function. Because the execution time has cost implications, we recommend
              you set this value based on your expected execution time. The default
              is 3 seconds. '
        MemorySize:
          allOf:
          - type: integer
            minimum: 128
            maximum: 1024
          - description: The memory size, in MB, you configured for the function.
              Must be a multiple of 64 MB.
        LastModified:
          allOf:
          - type: string
            format: date-time
          - description: The timestamp of the last time you updated the function.
      description: A complex type that describes function metadata.
    InvokeAsyncResponse:
      type: object
      properties:
        Status:
          allOf:
          - type: integer
          - description: It will be 202 upon success.
      description: Upon success, it returns empty response. Otherwise, throws an exception.
    InvalidRequestContentException:
      type: object
      properties:
        Type:
          type: string
        message:
          type: string
      description: The request body could not be parsed as JSON.
    ListEventSourcesResponse:
      type: object
      properties:
        NextMarker:
          allOf:
          - type: string
          - description: A string, present if there are more event source mappings.
        EventSources:
          allOf:
          - type: array
            items:
              type: object
              properties:
                UUID:
                  allOf:
                  - type: string
                  - description: The AWS Lambda assigned opaque identifier for the
                      mapping.
                BatchSize:
                  allOf:
                  - type: integer
                  - description: The largest number of records that AWS Lambda will
                      POST in the invocation request to your function.
                EventSource:
                  allOf:
                  - type: string
                  - description: The Amazon Resource Name (ARN) of the Amazon Kinesis
                      stream that is the source of events.
                FunctionName:
                  allOf:
                  - type: string
                    pattern: '[a-zA-Z0-9-_]+'
                    minLength: 1
                    maxLength: 64
                  - description: The Lambda function to invoke when AWS Lambda detects
                      an event on the stream.
                Parameters:
                  allOf:
                  - type: object
                    additionalProperties:
                      type: string
                  - description: The map (key-value pairs) defining the configuration
                      for AWS Lambda to use when reading the event source.
                Role:
                  allOf:
                  - type: string
                    pattern: arn:aws:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+
                  - description: The ARN of the IAM role (invocation role) that AWS
                      Lambda can assume to read from the stream and invoke the function.
                LastModified:
                  allOf:
                  - type: string
                    format: date-time
                  - description: The UTC time string indicating the last time the
                      event mapping was updated.
                IsActive:
                  allOf:
                  - type: boolean
                  - description: Indicates whether the event source mapping is currently
                      honored. Events are only processes if IsActive is true.
                Status:
                  allOf:
                  - type: string
                  - description: 'The description of the health of the event source
                      mapping. Valid values are: "PENDING", "OK", and "PROBLEM:<i>message</i>".
                      Initially this staus is "PENDING". When AWS Lambda begins processing
                      events, it changes the status to "OK".'
              description: Describes mapping between an Amazon Kinesis stream and
                a Lambda function.
          - description: An arrary of <code>EventSourceConfiguration</code> objects.
      description: Contains a list of event sources (see <a>API_EventSourceConfiguration</a>)
    ListFunctionsResponse:
      type: object
      properties:
        NextMarker:
          allOf:
          - type: string
          - description: A string, present if there are more functions.
        Functions:
          allOf:
          - type: array
            items:
              type: object
              properties:
                FunctionName:
                  allOf:
                  - type: string
                    pattern: '[a-zA-Z0-9-_]+'
                    minLength: 1
                    maxLength: 64
                  - description: The name of the function.
                FunctionARN:
                  allOf:
                  - type: string
                    pattern: 
                      arn:aws:lambda:[a-z]{2}-[a-z]+-\d{1}:\d{12}:function:[a-zA-Z0-9-_]+(\/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})?
                  - description: The Amazon Resource Name (ARN) assigned to the function.
                ConfigurationId:
                  allOf:
                  - type: string
                  - description: A Lambda-assigned unique identifier for the current
                      function code and related configuration.
                Runtime:
                  allOf:
                  - type: string
                    enum:
                    - nodejs
                  - description: The runtime environment for the Lambda function.
                Role:
                  allOf:
                  - type: string
                    pattern: arn:aws:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+
                  - description: The Amazon Resource Name (ARN) of the IAM role that
                      Lambda assumes when it executes your function to access any
                      other Amazon Web Services (AWS) resources.
                Handler:
                  allOf:
                  - type: string
                    pattern: '[a-zA-Z0-9./\-_]+'
                  - description: The function Lambda calls to begin executing your
                      function.
                Mode:
                  allOf:
                  - type: string
                    enum:
                    - event
                  - description: 'The type of the Lambda function you uploaded. '
                CodeSize:
                  allOf:
                  - type: integer
                  - description: The size, in bytes, of the function .zip file you
                      uploaded.
                Description:
                  allOf:
                  - type: string
                    minLength: 0
                    maxLength: 256
                  - description: The user-provided description.
                Timeout:
                  allOf:
                  - type: integer
                    minimum: 1
                    maximum: 60
                  - description: 'The function execution time at which Lambda should
                      terminate the function. Because the execution time has cost
                      implications, we recommend you set this value based on your
                      expected execution time. The default is 3 seconds. '
                MemorySize:
                  allOf:
                  - type: integer
                    minimum: 128
                    maximum: 1024
                  - description: The memory size, in MB, you configured for the function.
                      Must be a multiple of 64 MB.
                LastModified:
                  allOf:
                  - type: string
                    format: date-time
                  - description: The timestamp of the last time you updated the function.
              description: A complex type that describes function metadata.
          - description: A list of Lambda functions.
      description: Contains a list of AWS Lambda function configurations (see <a>API_FunctionConfiguration</a>.
    FunctionName:
      type: string
      pattern: '[a-zA-Z0-9-_]+'
      minLength: 1
      maxLength: 64
    RoleArn:
      type: string
      pattern: arn:aws:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+
    Integer:
      type: integer
    Map:
      type: object
      additionalProperties:
        type: string
    AddEventSourceRequest:
      type: object
      required:
      - EventSource
      - FunctionName
      - Role
      title: AddEventSourceRequest
      properties:
        EventSource:
          allOf:
          - type: string
          - description: The Amazon Resource Name (ARN) of the Amazon Kinesis stream
              that is the event source. Any record added to this stream causes AWS
              Lambda to invoke your Lambda function. AWS Lambda POSTs the Amazon Kinesis
              event, containing records, to your Lambda function as JSON.
        FunctionName:
          allOf:
          - type: string
            pattern: '[a-zA-Z0-9-_]+'
            minLength: 1
            maxLength: 64
          - description: The Lambda function to invoke when AWS Lambda detects an
              event on the stream.
        Role:
          allOf:
          - type: string
            pattern: arn:aws:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+
          - description: The ARN of the IAM role (invocation role) that AWS Lambda
              can assume to read from the stream and invoke the function.
        BatchSize:
          allOf:
          - type: integer
          - description: The largest number of records that AWS Lambda will give to
              your function in a single event. The default is 100 records.
        Parameters:
          allOf:
          - type: object
            additionalProperties:
              type: string
          - description: 'A map (key-value pairs) defining the configuration for AWS
              Lambda to use when reading the event source. Currently, AWS Lambda supports
              only the <code>InitialPositionInStream</code> key. The valid values
              are: "TRIM_HORIZON" and "LATEST". The default value is "TRIM_HORIZON".
              For more information, go to <a href="http://docs.aws.amazon.com/kinesis/latest/APIReference/API_GetShardIterator.html#Kinesis-GetShardIterator-request-ShardIteratorType">ShardIteratorType</a>
              in the Amazon Kinesis Service API Reference. '
    Blob:
      type: string
    DeleteFunctionRequest:
      type: object
      title: DeleteFunctionRequest
      properties: {}
    Description:
      type: string
      minLength: 0
      maxLength: 256
    Timestamp:
      type: string
      format: date-time
    Boolean:
      type: boolean
    EventSourceList:
      type: array
      items:
        type: object
        properties:
          UUID:
            allOf:
            - type: string
            - description: The AWS Lambda assigned opaque identifier for the mapping.
          BatchSize:
            allOf:
            - type: integer
            - description: The largest number of records that AWS Lambda will POST
                in the invocation request to your function.
          EventSource:
            allOf:
            - type: string
            - description: The Amazon Resource Name (ARN) of the Amazon Kinesis stream
                that is the source of events.
          FunctionName:
            allOf:
            - type: string
              pattern: '[a-zA-Z0-9-_]+'
              minLength: 1
              maxLength: 64
            - description: The Lambda function to invoke when AWS Lambda detects an
                event on the stream.
          Parameters:
            allOf:
            - type: object
              additionalProperties:
                type: string
            - description: The map (key-value pairs) defining the configuration for
                AWS Lambda to use when reading the event source.
          Role:
            allOf:
            - type: string
              pattern: arn:aws:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+
            - description: The ARN of the IAM role (invocation role) that AWS Lambda
                can assume to read from the stream and invoke the function.
          LastModified:
            allOf:
            - type: string
              format: date-time
            - description: The UTC time string indicating the last time the event
                mapping was updated.
          IsActive:
            allOf:
            - type: boolean
            - description: Indicates whether the event source mapping is currently
                honored. Events are only processes if IsActive is true.
          Status:
            allOf:
            - type: string
            - description: 'The description of the health of the event source mapping.
                Valid values are: "PENDING", "OK", and "PROBLEM:<i>message</i>". Initially
                this staus is "PENDING". When AWS Lambda begins processing events,
                it changes the status to "OK".'
        description: Describes mapping between an Amazon Kinesis stream and a Lambda
          function.
    FunctionArn:
      type: string
      pattern: 
        arn:aws:lambda:[a-z]{2}-[a-z]+-\d{1}:\d{12}:function:[a-zA-Z0-9-_]+(\/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})?
    FunctionCodeLocation:
      type: object
      properties:
        RepositoryType:
          allOf:
          - type: string
          - description: The repository from which you can download the function.
        Location:
          allOf:
          - type: string
          - description: The presigned URL you can use to download the function's
              .zip file that you previously uploaded. The URL is valid for up to 10
              minutes.
      description: The object for the Lambda function location.
    Runtime:
      type: string
      enum:
      - nodejs
    Handler:
      type: string
      pattern: '[a-zA-Z0-9./\-_]+'
    Mode:
      type: string
      enum:
      - event
    Long:
      type: integer
    Timeout:
      type: integer
      minimum: 1
      maximum: 60
    MemorySize:
      type: integer
      minimum: 128
      maximum: 1024
    FunctionList:
      type: array
      items:
        type: object
        properties:
          FunctionName:
            allOf:
            - type: string
              pattern: '[a-zA-Z0-9-_]+'
              minLength: 1
              maxLength: 64
            - description: The name of the function.
          FunctionARN:
            allOf:
            - type: string
              pattern: 
                arn:aws:lambda:[a-z]{2}-[a-z]+-\d{1}:\d{12}:function:[a-zA-Z0-9-_]+(\/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})?
            - description: The Amazon Resource Name (ARN) assigned to the function.
          ConfigurationId:
            allOf:
            - type: string
            - description: A Lambda-assigned unique identifier for the current function
                code and related configuration.
          Runtime:
            allOf:
            - type: string
              enum:
              - nodejs
            - description: The runtime environment for the Lambda function.
          Role:
            allOf:
            - type: string
              pattern: arn:aws:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+
            - description: The Amazon Resource Name (ARN) of the IAM role that Lambda
                assumes when it executes your function to access any other Amazon
                Web Services (AWS) resources.
          Handler:
            allOf:
            - type: string
              pattern: '[a-zA-Z0-9./\-_]+'
            - description: The function Lambda calls to begin executing your function.
          Mode:
            allOf:
            - type: string
              enum:
              - event
            - description: 'The type of the Lambda function you uploaded. '
          CodeSize:
            allOf:
            - type: integer
            - description: The size, in bytes, of the function .zip file you uploaded.
          Description:
            allOf:
            - type: string
              minLength: 0
              maxLength: 256
            - description: The user-provided description.
          Timeout:
            allOf:
            - type: integer
              minimum: 1
              maximum: 60
            - description: 'The function execution time at which Lambda should terminate
                the function. Because the execution time has cost implications, we
                recommend you set this value based on your expected execution time.
                The default is 3 seconds. '
          MemorySize:
            allOf:
            - type: integer
              minimum: 128
              maximum: 1024
            - description: The memory size, in MB, you configured for the function.
                Must be a multiple of 64 MB.
          LastModified:
            allOf:
            - type: string
              format: date-time
            - description: The timestamp of the last time you updated the function.
        description: A complex type that describes function metadata.
    GetEventSourceRequest:
      type: object
      title: GetEventSourceRequest
      properties: {}
    GetFunctionConfigurationRequest:
      type: object
      title: GetFunctionConfigurationRequest
      properties: {}
    GetFunctionRequest:
      type: object
      title: GetFunctionRequest
      properties: {}
    HttpStatus:
      type: integer
    InvokeAsyncRequest:
      type: object
      required:
      - InvokeArgs
      title: InvokeAsyncRequest
      properties:
        InvokeArgs:
          allOf:
          - type: string
          - description: JSON that you want to provide to your Lambda function as
              input.
    MaxListItems:
      type: integer
      minimum: 1
      maximum: 10000
    ListEventSourcesRequest:
      type: object
      title: ListEventSourcesRequest
      properties: {}
    ListFunctionsRequest:
      type: object
      title: ListFunctionsRequest
      properties: {}
    RemoveEventSourceRequest:
      type: object
      title: RemoveEventSourceRequest
      properties: {}
    UpdateFunctionConfigurationRequest:
      type: object
      title: UpdateFunctionConfigurationRequest
      properties: {}
    UploadFunctionRequest:
      type: object
      required:
      - FunctionZip
      title: UploadFunctionRequest
      properties:
        FunctionZip:
          allOf:
          - type: string
          - description: 'A .zip file containing your packaged source code. For more
              information about creating a .zip file, go to <a href="http://docs.aws.amazon.com/lambda/latest/dg/walkthrough-custom-events.html">AWS
              LambdaL How it Works</a> in the AWS Lambda Developer Guide. '
security:
- hmac: []
